
--------------------------------------
-- patterns_test28.ast
-- a simple program to test for
-- subsumption detection in Asteroid.
--------------------------------------
--------------------------------------
load "io".
load "util".

structure Person with
    data name.
    data age.
    data gender.
    end

-- define a list of persons
let people = [
    Person("George", 32, "M"),
    Person("Sophie", 46, "F"),
    Person("Oliver", 21, "X")
    ].

function test_function 
  with Person(name:".*p.*",_,_) do
    return "Found a p.".
  orwith Person(name:".*g.*",_,_) do   -- *** The regular expression ".*g.*" will subsume ".*gg.*"
    return "Found a g.".
  orwith Person(name:".*v.*",_,_) do
    return "Found a v.".
  orwith Person(name:".*gg.*",_,_) do  -- will be redundant
    return "Found a gg.".
  end.

let loopCounter = 0.

-- print names that contain 'p'
for Person(_,_,_) in people do
  try
    println (test_function( people @loopCounter )).
  catch ("Exception", s) do
    if not isnone(s @index("Redundant")) do
       exit "Got expected redundant pattern error.".
    else
       throw Error("unexpected error: "+s).
    end
  end
  let loopCounter = loopCounter + 1.
end.