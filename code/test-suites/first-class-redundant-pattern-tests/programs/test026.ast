
--------------------------------------
-- patterns_test25.ast
-- a simple program to test for
-- subsumption detection in Asteroid.
--------------------------------------
--------------------------------------
load "io".
load "util".

structure Person with
    data name.
    data age.
    data gender.
    end

-- define a list of persons
let people = [
    Person("George", 32, "M"),
    Person("Sophie", 46, "F"),
    Person("Oliver", 21, "X")
    ].

let ptrn1 = pattern with Person("George", 32, "M").
let ptrn2 = pattern with Person("Sophie", 46, "F").
let ptrn3 = pattern with Person("George", 32, "M").
  
function testFunction
    with *ptrn1 do    -- *** will Subsume Person("George", 32, "M")
        return 1.
    orwith *ptrn2 do
        return 2.
    orwith *ptrn3 do  --duplicate structure/object
        return 3.
    end.

try 
    
    let x = testFunction( Person("George", 32, "M") ).
    println ( x ).
catch ("Exception", s) do
    if not isnone(s @index("Redundant")) do
        exit "Got expected redundant pattern error.".
    else
        throw Error("unexpected error: "+s).
    end.
end.