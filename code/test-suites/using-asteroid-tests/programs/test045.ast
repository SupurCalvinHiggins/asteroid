
load "io".
load "math".
load "util".
load "type".

function polar_to_cartesian with (r,psi) do
    -- return a tuple: (x,y)
    return (r*cos(psi),r*sin(psi)).
end

function cartesian_to_polar with (x,y) do
    return (sqrt(pow(x,2)+pow(y,2)),cartesian_to_psi(x,y)).
end

function cartesian_to_psi
    with (x,y) %if x > 0  do
        return atan(toreal(y)/x).
    orwith (x,y) %if x < 0 and y >= 0 do
        return atan(toreal(y)/x)+pi.
    orwith (x,y) %if x < 0 and y < 0 do
        return atan(toreal(y)/x)-pi.
    orwith (x,y) %if x == 0 and y > 0 do
        return pi/2.
    orwith (x,y) %if x == 0 and y < 0 do
        return -pi/2.
    orwith (x,y) %if x == 0 and y == 0 do
        return none.
    end

let (r,psi) = cartesian_to_polar(-3,5).
let (x,y) = polar_to_cartesian(r,psi).

println (x,y).

-- show that the recovered coordinates are the same
-- we started with
assert (isclose(-3,x,0.0001) and isclose(5,y,0.0001)).
