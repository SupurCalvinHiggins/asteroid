------------------------------------------------------------------
-- Basic File I/O wrapper
------------------------------------------------------------------

------------------------------------------------------------------
structure File with
------------------------------------------------------------------
data f.
------------------------------------------------------------------
    
------------------------------------------------------------------
function __init__
------------------------------------------------------------------
with (name:%string, mode:%string) do escape
"
from asteroid_state import state
this_val = state.symbol_table.lookup_sym('this')
name_val = state.symbol_table.lookup_sym('name')
mode_val = state.symbol_table.lookup_sym('mode')

# destructure object
(OBJECT,
(CLASS_ID, (ID, class_id)),
(OBJECT_MEMORY, (LIST, memory))) = this_val

memory[0] = open(name_val[1], mode_val[1])
"
end
end -- structure
------------------------------------------------------------------


------------------------------------------------------------------
function freadline
------------------------------------------------------------------
with file:%File do return escape
"
global __retval__
from asteroid_state import state
file_val = state.symbol_table.lookup_sym('file')

(_,
(CLASS_ID, (ID, class_id)),
(OBJECT_MEMORY, (LIST, memory))) = file_val

file_conents = memory[0].readline()
__retval__ = ('string', file_conents)
"
end
------------------------------------------------------------------

------------------------------------------------------------------
function fwrite
------------------------------------------------------------------
with (file:%File, contents:%string) do escape
"
from asteroid_state import state
file_val = state.symbol_table.lookup_sym('file')
contents = state.symbol_table.lookup_sym('contents')

(OBJECT,
(CLASS_ID, (ID, class_id)),
(OBJECT_MEMORY, (LIST, memory))) = file_val

memory[0].write(contents[1])
"
end
------------------------------------------------------------------

------------------------------------------------------------------
function fclose
------------------------------------------------------------------
with file:%File do escape
"
from asteroid_state import state
file_val = state.symbol_table.lookup_sym('file')

(OBJECT,
(CLASS_ID, (ID, class_id)),
(OBJECT_MEMORY, (LIST, memory))) = file_val

memory[0].close()
"
end